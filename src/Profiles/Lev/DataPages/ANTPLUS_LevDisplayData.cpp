#include <Profiles/Lev/DataPages/ANTPLUS_LevDisplayData.h>
#include <Profiles/Lev/ANTPLUS_LevPrivateDefines.h>

LevDisplayDataMsg::LevDisplayDataMsg() : LevBaseMainDataPageMsg(ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_NUMBER) {
    _buffer[ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_RESERVED1_BYTE] = ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_RESERVED1_VALUE;
    _buffer[ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_RESERVED2_BYTE] = ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_RESERVED2_VALUE;
}

uint16_t LevDisplayDataMsg::getWheelCircumference() {
    return get16BitValue(ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_WHEELCIRCUMFERENCE_LSB_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_WHEELCIRCUMFERENCE_MSB_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_WHEELCIRCUMFERENCE_MASK);
}

uint8_t LevDisplayDataMsg::getCurrentAssistLevel() {
    return get8BitValue(ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTASSISTLEVEL_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTASSISTLEVEL_MASK,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTASSISTLEVEL_SHIFT);
}

uint8_t LevDisplayDataMsg::getCurrentRegenerativeLevel() {
    return get8BitValue(ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTREGENERATIVELEVEL_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTREGENERATIVELEVEL_MASK);
}

uint8_t LevDisplayDataMsg::getCurrentRearGear() {
    // This is a 16 bit call because the 4 bits spans 2 bytes
    return (uint8_t)get16BitValue(
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTREARGEAR_LSB_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTREARGEAR_MSB_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTREARGEAR_MASK,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTREARGEAR_SHIFT);
}

uint8_t LevDisplayDataMsg::getCurrentFrontGear() {
    return get8BitValue(ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTFRONTGEAR_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTFRONTGEAR_MASK,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTFRONTGEAR_SHIFT);
}

uint8_t LevDisplayDataMsg::getCurrentLightMode() {
    return get8BitValue(ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTLIGHTMODE_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTLIGHTMODE_MASK);
}

uint16_t LevDisplayDataMsg::getManufacturerID() {
    return get16BitValue(ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_MANUFACTURERID_LSB_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_MANUFACTURERID_MSB_BYTE);
}

void LevDisplayDataMsg::setWheelCircumference(uint16_t circumference) {
    set16BitValue(circumference,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_WHEELCIRCUMFERENCE_LSB_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_WHEELCIRCUMFERENCE_MSB_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_WHEELCIRCUMFERENCE_MASK);
}

void LevDisplayDataMsg::setCurrentAssistLevel(uint8_t level) {
    set8BitValue(level,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTASSISTLEVEL_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTASSISTLEVEL_MASK,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTASSISTLEVEL_SHIFT);
}

void LevDisplayDataMsg::setCurrentRegenerativeLevel(uint8_t level) {
    set8BitValue(level,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTREGENERATIVELEVEL_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTREGENERATIVELEVEL_MASK);
}

void LevDisplayDataMsg::setCurrentRearGear(uint8_t gear) {
    set16BitValue(gear,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTREARGEAR_LSB_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTREARGEAR_MSB_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTREARGEAR_MASK,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTREARGEAR_SHIFT);
}

void LevDisplayDataMsg::setCurrentFrontGear(uint8_t gear) {
    set8BitValue(gear,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTFRONTGEAR_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTFRONTGEAR_MASK,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTFRONTGEAR_SHIFT);
}

void LevDisplayDataMsg::setCurrentLightMode(uint8_t state) {
    set8BitValue(state,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTLIGHTMODE_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_CURRENTLIGHTMODE_MASK);
}

void LevDisplayDataMsg::setManufacturerID(uint16_t id) {
    set16BitValue(id,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_MANUFACTURERID_LSB_BYTE,
            ANTPLUS_LEV_DATAPAGE_DISPLAYDATA_MANUFACTURERID_MSB_BYTE);
}
